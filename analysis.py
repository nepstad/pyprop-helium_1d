from numpy import sum
import pyprop
from libpotential import CalculateProjectionOneParticleStates
from example import GetGroundstateFilename

def GetPopulationProductStates(psi, singleStates1, singleStates2):
	"""
	Calculates the population of psi in a set of single electron product states

	P_i =  |< SingleState1_i(1), SingleState2_j(2) | psi(1,2) >|^2

	singleStates 1 and 2 are lists of 1D eigenstates, containing an array 
	of states such as generated by SetupEigenstates1D.
	
	the projection is carried out for every combination of singlestate1 and singlestate2i
	is returned in a similar structure
	"""

	#Make a copy of the wavefunction and multiply 
	#integration weights and overlap matrix
	tempPsi = psi.Copy()
	psiRepr = psi.GetRepresentation()
	psiRepr.MultiplyIntegrationWeights(tempPsi)

	data = tempPsi.GetData()

	#Get the projection for every combination of v1 and v2
	def calculateProjections():
		return CalculateProjectionOneParticleStates(singleStates1, singleStates2, data)
	#population = sum([abs(p)**2 for i1, i2, p in projV])
	projV = calculateProjections()
	populations = abs(projV)**2

	return populations


def RemoveGroundstateProjection(psi, conf):
	"""
	Remove ground state  projection from wavefunction

	"""
	filename = GetGroundstateFilename(config = conf)
	gsPsi = pyprop.CreateWavefunctionFromFile(filename)
	proj = psi.InnerProduct(gsPsi)
	psi.GetData()[:] -= proj * gsPsi.GetData()
